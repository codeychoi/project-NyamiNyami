# 애플리케이션 이름 및 포트 설정
spring.application.name=project-NyamiNyami
server.port=80

# HTTP 요청, 응답 문자 인코딩 설정
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# JSP 관련 설정
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# Mybatis 설정
mybatis.mapper-locations=classpath:/mapper/*.xml
mybatis.type-aliases-package=com.project.domain, com.project.dto
mybatis.configuration.map-underscore-to-camel-case=true
#mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

# Oracle DB 설정
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@43.203.202.61:1521:xe
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# HikariCP 설정 (DB 연결 풀)
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1500000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL
spring.datasource.hikari.pool-name=HikariCP

# 트랜잭션 관리
spring.transaction.default-timeout=30

# 파일 업로드 및 요청 타임아웃 설정
server.servlet.session.timeout=30m
server.tomcat.connection-timeout=5000

# 로그 설정
logging.level.com.zaxxer.hikari=INFO
logging.level.org.springframework.jdbc=DEBUG

# 네이버 OAuth2 클라이언트 설정
spring.security.oauth2.client.registration.naver.client-id=${NAVER_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_PW}
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-name=Naver

# 네이버 OAuth2 제공자 설정
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# 카카오 OAuth2 설정
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_ID}
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.client-name=Kakao

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# 구글 OAuth2 설정
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_PW}
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=email,profile

# 이메일 인증 설정
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_ID}
spring.mail.password=${EMAIL_PW}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# 파일 업로드 제한 설정
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# 중요 정보 변수 처리 (application-secret.properties)
spring.config.import=optional:file:./application-secret.properties

# 로그 설정
logging.level.com.project=DEBUG
logging.file.name=/home/ec2-user/application.log
logging.level.org.springframework.security=DEBUG

# Docker (docker run --env-file ./application-secret.properties -p 80:80 project-nyami:0.0.x)
#spring.config.import=optional:file:/path/in/container/application-secret.properties